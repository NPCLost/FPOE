
package bibliotecaapp;
import javax.swing.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class BibliotecaApp {
    private static ArrayList<Libro> libros = new ArrayList<>();

    public static void main(String[] args) {
        while (true) {
            String opcion = JOptionPane.showInputDialog(null,
                    "Menú Principal:\n" +
                    "1. Gestión de Libros\n" +
                    "2. Listados\n" +
                    "3. Estadísticas\n" +
                    "4. Acerca de\n" +
                    "5. Salir");

            switch (opcion) {
                case "1":
                    gestionLibros();
                    break;
                case "2":
                    listarLibros();
                    break;
                case "3":
                    mostrarEstadisticas();
                    break;
                case "4":
                    acercaDe();
                    break;
                case "5":
                    System.exit(0);
                default:
                    JOptionPane.showMessageDialog(null, "Opción no válida.");
            }
        }
    }

    private static void gestionLibros() {
        String opcion = JOptionPane.showInputDialog(null,
                "Gestión de Libros:\n" +
                "1. Nuevo Libro\n" +
                "2. Consultar Libro\n" +
                "3. Modificar Libro\n" +
                "4. Eliminar Libro");

        switch (opcion) {
            case "1":
                nuevoLibro();
                break;
            case "2":
                consultarLibro();
                break;
            case "3":
                modificarLibro();
                break;
            case "4":
                eliminarLibro();
                break;
            default:
                JOptionPane.showMessageDialog(null, "Opción no válida.");
        }
    }

    private static void nuevoLibro() {
        String isbn = JOptionPane.showInputDialog("Ingrese el ISBN:");
        if (buscarLibroPorIsbn(isbn) != null) {
            JOptionPane.showMessageDialog(null, "El ISBN ya existe.");
            return;
        }

        String titulo = JOptionPane.showInputDialog("Ingrese el título:");
        String autor = JOptionPane.showInputDialog("Ingrese el autor:");
        String editorial = JOptionPane.showInputDialog("Ingrese la editorial:");
        ArrayList<Double> preciosHistoricos = new ArrayList<>();
        for (int i = 0; i < 3; i++) {
            String precioStr = JOptionPane.showInputDialog("Ingrese el precio histórico " + (i + 1) + ":");
            try {
                double precio = Double.parseDouble(precioStr);
                preciosHistoricos.add(precio);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Precio inválido. Intente nuevamente.");
                i--;
            }
        }

        Libro libro = new Libro(isbn, titulo, autor, editorial, preciosHistoricos);
        libros.add(libro);
        JOptionPane.showMessageDialog(null, "Libro agregado exitosamente.");
    }

    private static Libro buscarLibroPorIsbn(String isbn) {
        for (Libro libro : libros) {
            if (libro.getIsbn().equals(isbn)) {
                return libro;
            }
        }
        return null;
    }

    private static void consultarLibro() {
        String isbn = JOptionPane.showInputDialog("Ingrese el ISBN del libro:");
        Libro libro = buscarLibroPorIsbn(isbn);
        if (libro == null) {
            JOptionPane.showMessageDialog(null, "Libro no encontrado.");
        } else {
            JOptionPane.showMessageDialog(null, libro.toString());
        }
    }

    private static void modificarLibro() {
        String isbn = JOptionPane.showInputDialog("Ingrese el ISBN del libro:");
        Libro libro = buscarLibroPorIsbn(isbn);
        if (libro == null) {
            JOptionPane.showMessageDialog(null, "Libro no encontrado.");
            return;
        }

        String opcion = JOptionPane.showInputDialog(null,
                "Modificar Libro:\n" +
                "1. Modificar Título\n" +
                "2. Modificar Autor\n" +
                "3. Modificar Editorial");

        switch (opcion) {
            case "1":
                String nuevoTitulo = JOptionPane.showInputDialog("Ingrese el nuevo título:");
                libro.setTitulo(nuevoTitulo);
                break;
            case "2":
                String nuevoAutor = JOptionPane.showInputDialog("Ingrese el nuevo autor:");
                libro.setAutor(nuevoAutor);
                break;
            case "3":
                String nuevaEditorial = JOptionPane.showInputDialog("Ingrese la nueva editorial:");
                libro.setEditorial(nuevaEditorial);
                break;
            default:
                JOptionPane.showMessageDialog(null, "Opción no válida.");
        }

        JOptionPane.showMessageDialog(null, "Libro modificado exitosamente.");
    }

    private static void eliminarLibro() {
        String isbn = JOptionPane.showInputDialog("Ingrese el ISBN del libro:");
        Libro libro = buscarLibroPorIsbn(isbn);
        if (libro == null) {
            JOptionPane.showMessageDialog(null, "Libro no encontrado.");
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(null,
                "¿Está seguro que desea eliminar el libro?\n" + libro.toString(),
                "Confirmación",
                JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            libros.remove(libro);
            JOptionPane.showMessageDialog(null, "Libro eliminado exitosamente.");
        }
    }

    private static void listarLibros() {
        if (libros.isEmpty()) {
            System.out.println("No hay libros registrados.");
            return;
        }

        String opcion = JOptionPane.showInputDialog(null,
                "Listados:\n" +
                "1. Listado General\n" +
                "2. Listado por Consulta");

        switch (opcion) {
            case "1":
                for (Libro libro : libros) {
                    System.out.println(libro);
                    System.out.println("--------------------");
                }
                break;
            case "2":
                String autor = JOptionPane.showInputDialog("Ingrese el autor a buscar:");
                for (Libro libro : libros) {
                    if (libro.getAutor().equalsIgnoreCase(autor)) {
                        System.out.println(libro);
                        System.out.println("--------------------");
                    }
                }
                break;
            default:
                JOptionPane.showMessageDialog(null, "Opción no válida.");
        }
    }

    private static void mostrarEstadisticas() {
        if (libros.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No hay libros registrados.");
            return;
        }

        String opcion = JOptionPane.showInputDialog(null,
                "Estadísticas:\n" +
                "1. Promedio de Precios Históricos\n" +
                "2. Cantidad de Libros por Autor\n" +
                "3. Libro con el Precio Más Alto");

        switch (opcion) {
            case "1":
                mostrarPromedioPrecios();
                break;
            case "2":
                mostrarCantidadLibrosPorAutor();
                break;
            case "3":
                mostrarLibroConPrecioMasAlto();
                break;
            default:
                JOptionPane.showMessageDialog(null, "Opción no válida.");
        }
    }

    private static void mostrarPromedioPrecios() {
        double sumaTotal = 0;
        int cantidadPrecios = 0;
        for (Libro libro : libros) {
            for (double precio : libro.getPreciosHistoricos()) {
                sumaTotal += precio;
                cantidadPrecios++;
            }
        }
        double promedio = sumaTotal / cantidadPrecios;
        JOptionPane.showMessageDialog(null, "El promedio de los precios históricos es: " + promedio);
    }

    private static void mostrarCantidadLibrosPorAutor() {
        Map<String, Integer> conteoAutores = new HashMap<>();
        for (Libro libro : libros) {
            String autor = libro.getAutor();
            conteoAutores.put(autor, conteoAutores.getOrDefault(autor, 0) + 1);
        }
        StringBuilder resultado = new StringBuilder("Cantidad de libros por autor:\n");
        for (Map.Entry<String, Integer> entry : conteoAutores.entrySet()) {
            resultado.append(entry.getKey()).append(": ").append(entry.getValue()).append("\n");
        }
        JOptionPane.showMessageDialog(null, resultado.toString());
    }

    private static void mostrarLibroConPrecioMasAlto() {
        Libro libroConPrecioMasAlto = null;
        double precioMasAlto = Double.MIN_VALUE;

        for (Libro libro : libros) {
            for (double precio : libro.getPreciosHistoricos()) {
                if (precio > precioMasAlto) {
                    precioMasAlto = precio;
                    libroConPrecioMasAlto = libro;
                }
            }
        }

        if (libroConPrecioMasAlto != null) {
            JOptionPane.showMessageDialog(null,
                    "El libro con el precio más alto es:\n" + libroConPrecioMasAlto.toString() +
                            "\nPrecio más alto: " + precioMasAlto);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún precio.");
        }
    }

    private static void acercaDe() {
        JOptionPane.showMessageDialog(null, "Nombre 1 - Código Estudiantil 1\n" +
                "Nombre 2 - Código Estudiantil 2\n" +
                "Nombre 3 - Código Estudiantil 3");
    }
}
